image: gradle:8.3.0-jdk17



stages:
  - build
  - test
  - sonarqube-check
  - sonarqube-vulnerability-report
  - deploy

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

sonarqube-check:
  script:
    - gradle sonar -Dsonar.host.url=http://host.docker.internal:9000 -Dsonar.login=$SONAR_TOKEN
  stage: sonarqube-check
  image: gradle:8.2.0-jdk17-jammy
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "1"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - dev

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "$sonar_token:" "$sonar_host/api/issues/gitlab_sast_export?projectKey=xTrack&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - dev
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check




deploy:
  stage: deploy

  script:
    - echo "build and push image"
#  image: docker:latest
#  services:
#    - docker:dind
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_TLS_CERTDIR: ""
#  script:
#    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" $DOCKER_REGISTRY
#    - docker build -t $DOCKER_REGISTRY/healthBE:$CI_COMMIT_REF_SLUG .
#    - docker push $DOCKER_REGISTRY/healthBE:$CI_COMMIT_REF_SLUG